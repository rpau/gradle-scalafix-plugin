// add the build script
buildscript {
    dependencies {
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath "com.adtran:scala-multiversion-plugin:1.+"
    }
}

plugins {
    id 'java'
    id 'java-gradle-plugin'
}

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'net.researchgate.release'
apply plugin: "com.adtran.scala-multiversion-plugin"

configurations {
    scalaCompilerPlugin
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.scala-lang:scala-library:$scalaVersion"
    compile "ch.epfl.scala:scalafix-cli_$scalaVersion:0.9.4"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

ext {
    v_ossrhUsername = System.getenv('SONATYPE_USER')
    ossrhPassword = System.getenv('SONATYPE_TOKEN')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            artifact packageJavadoc

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name "gradle-scalafix-plugin_${scalaVersion}"
                    description 'A library to run scalafix'
                    url 'https://github.com/rpau/gradle-scalafix-plugin'
                    scm {
                        url 'https://github.com/rpau/gradle-scalafix-plugin'
                        connection 'https://github.com/rpau/gradle-scalafix-plugin.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'rpau'
                            name 'Raquel Pau'
                            email 'rpau@walkmod.com'
                        }
                    }
                }
            }

            repositories {
                maven {
                    credentials {
                        username "${v_ossrhUsername}"
                        password "${ossrhPassword}"
                    }

                    def releasesRepoUrl = "https://oss.sonatype.org/content/repositories/releases"
                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                }
            }
        }
    }
}
gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        allprojects {
            ext."signing.keyId" = "53E1A142"
            ext."signing.secretKeyRingFile" = System.getenv('HOME') + "/.gnupg/secring.gpg"
            ext."signing.password" = System.getenv('SIGNATURE_PWD')
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
